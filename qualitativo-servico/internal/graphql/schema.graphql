type Classificador {
    codigo: String!
    nome: String!
}

input ClassificadorInput {
    codigo: String
    nome: String
}

type Classificacao {
    esfera: Classificador
    orgao: Classificador
    funcao: Classificador
    subFuncao: Classificador
    programa: Classificador
    acao: Classificador
    localizador: Classificador
    classificacaoCodificada: String!
}

input ClassificacaoInput {
    esfera: ClassificadorInput
    orgao: ClassificadorInput
    funcao: ClassificadorInput
    subFuncao: ClassificadorInput
    programa: ClassificadorInput
    acao: ClassificadorInput
    localizador: ClassificadorInput
}

type Esfera {
    id: Int
    codigo: String
    nome: String
    nomeAbreviado: String
    ativo: Boolean
}

input EsferaInput {
    id: Int
    codigo: String
    nome: String
    nomeAbreviado: String
    ativo: Boolean
}

input FiltroLocalizador {
    exercicio: Int!
    classificacoesCodificadas: [String!]
    classificacoesParciais: [ClassificacaoInput]
}

type Localizador {
    classificacaoCodificada: String!
    classificacao: Classificacao
}

type Query {
    """
    Lista as classificações correspondentes às classificações codificadas,
    ou seja, para cada classificacão codificada, será retornado uma
    classificação correspondente, e para cada elemento de uma classificação
    codificada, será retornado um classificador correspondente,
    contendo o código e o nome do classificador.
    """
    classificacoes(exercicio: Int!, classificacoesCodificadas: [String!]!): [Classificacao!]!
    """
    Lista as esferas correspondentes ao filtro.
    """
    esferas(filtro: EsferaInput): [Esfera!]!
    """
    Lista os localizadores correspondentes ao filtro.
    O parâmetro "n" limita o resultado.
    """
    localizadores(filtro: FiltroLocalizador!, n: Int): [Localizador!]!
}

schema {
    query: Query
}
