// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: internal/gerados/qualitativo-servico.proto

package gerados

import (
	siop_proto "git.sof.intra/siop/siop-proto"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ClassificacoesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercicio                 int32    `protobuf:"varint,1,opt,name=exercicio,proto3" json:"exercicio,omitempty"`
	ClassificacoesCodificadas []string `protobuf:"bytes,2,rep,name=classificacoes_codificadas,json=classificacoesCodificadas,proto3" json:"classificacoes_codificadas,omitempty"`
}

func (x *ClassificacoesRequest) Reset() {
	*x = ClassificacoesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassificacoesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassificacoesRequest) ProtoMessage() {}

func (x *ClassificacoesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassificacoesRequest.ProtoReflect.Descriptor instead.
func (*ClassificacoesRequest) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{0}
}

func (x *ClassificacoesRequest) GetExercicio() int32 {
	if x != nil {
		return x.Exercicio
	}
	return 0
}

func (x *ClassificacoesRequest) GetClassificacoesCodificadas() []string {
	if x != nil {
		return x.ClassificacoesCodificadas
	}
	return nil
}

type ClassificacoesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classificacoes []*Classificacao `protobuf:"bytes,1,rep,name=classificacoes,proto3" json:"classificacoes,omitempty"`
}

func (x *ClassificacoesReply) Reset() {
	*x = ClassificacoesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassificacoesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassificacoesReply) ProtoMessage() {}

func (x *ClassificacoesReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassificacoesReply.ProtoReflect.Descriptor instead.
func (*ClassificacoesReply) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{1}
}

func (x *ClassificacoesReply) GetClassificacoes() []*Classificacao {
	if x != nil {
		return x.Classificacoes
	}
	return nil
}

type LocalizadoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filtro *FiltroLocalizador `protobuf:"bytes,1,opt,name=filtro,proto3" json:"filtro,omitempty"`
	Fetch  *FetchLocalizador  `protobuf:"bytes,2,opt,name=fetch,proto3" json:"fetch,omitempty"`
	N      int32              `protobuf:"varint,3,opt,name=n,proto3" json:"n,omitempty"`
}

func (x *LocalizadoresRequest) Reset() {
	*x = LocalizadoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizadoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizadoresRequest) ProtoMessage() {}

func (x *LocalizadoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizadoresRequest.ProtoReflect.Descriptor instead.
func (*LocalizadoresRequest) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{2}
}

func (x *LocalizadoresRequest) GetFiltro() *FiltroLocalizador {
	if x != nil {
		return x.Filtro
	}
	return nil
}

func (x *LocalizadoresRequest) GetFetch() *FetchLocalizador {
	if x != nil {
		return x.Fetch
	}
	return nil
}

func (x *LocalizadoresRequest) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

type LocalizadoresReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Localizadores []*Localizador `protobuf:"bytes,1,rep,name=localizadores,proto3" json:"localizadores,omitempty"`
}

func (x *LocalizadoresReply) Reset() {
	*x = LocalizadoresReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizadoresReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizadoresReply) ProtoMessage() {}

func (x *LocalizadoresReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizadoresReply.ProtoReflect.Descriptor instead.
func (*LocalizadoresReply) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{3}
}

func (x *LocalizadoresReply) GetLocalizadores() []*Localizador {
	if x != nil {
		return x.Localizadores
	}
	return nil
}

type DecodificarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassificacoesCodificadas []string `protobuf:"bytes,1,rep,name=classificacoes_codificadas,json=classificacoesCodificadas,proto3" json:"classificacoes_codificadas,omitempty"`
}

func (x *DecodificarRequest) Reset() {
	*x = DecodificarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodificarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodificarRequest) ProtoMessage() {}

func (x *DecodificarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodificarRequest.ProtoReflect.Descriptor instead.
func (*DecodificarRequest) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{4}
}

func (x *DecodificarRequest) GetClassificacoesCodificadas() []string {
	if x != nil {
		return x.ClassificacoesCodificadas
	}
	return nil
}

type DecodificarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classificacoes []*Classificacao `protobuf:"bytes,1,rep,name=classificacoes,proto3" json:"classificacoes,omitempty"`
}

func (x *DecodificarReply) Reset() {
	*x = DecodificarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodificarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodificarReply) ProtoMessage() {}

func (x *DecodificarReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodificarReply.ProtoReflect.Descriptor instead.
func (*DecodificarReply) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{5}
}

func (x *DecodificarReply) GetClassificacoes() []*Classificacao {
	if x != nil {
		return x.Classificacoes
	}
	return nil
}

type Classificacao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Esfera                  *siop_proto.Classificador `protobuf:"bytes,1,opt,name=esfera,json=Esfera,proto3" json:"esfera,omitempty"`
	Orgao                   *siop_proto.Classificador `protobuf:"bytes,2,opt,name=orgao,json=Orgao,proto3" json:"orgao,omitempty"`
	Funcao                  *siop_proto.Classificador `protobuf:"bytes,3,opt,name=funcao,json=Funcao,proto3" json:"funcao,omitempty"`
	SubFuncao               *siop_proto.Classificador `protobuf:"bytes,4,opt,name=sub_funcao,json=SubFuncao,proto3" json:"sub_funcao,omitempty"`
	Programa                *siop_proto.Classificador `protobuf:"bytes,5,opt,name=programa,json=Programa,proto3" json:"programa,omitempty"`
	Acao                    *siop_proto.Classificador `protobuf:"bytes,6,opt,name=acao,json=Acao,proto3" json:"acao,omitempty"`
	Localizador             *siop_proto.Classificador `protobuf:"bytes,7,opt,name=localizador,json=Localizador,proto3" json:"localizador,omitempty"`
	ClassificacaoCodificada string                    `protobuf:"bytes,8,opt,name=classificacao_codificada,json=ClassificacaoCodificada,proto3" json:"classificacao_codificada,omitempty"`
}

func (x *Classificacao) Reset() {
	*x = Classificacao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Classificacao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Classificacao) ProtoMessage() {}

func (x *Classificacao) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Classificacao.ProtoReflect.Descriptor instead.
func (*Classificacao) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{6}
}

func (x *Classificacao) GetEsfera() *siop_proto.Classificador {
	if x != nil {
		return x.Esfera
	}
	return nil
}

func (x *Classificacao) GetOrgao() *siop_proto.Classificador {
	if x != nil {
		return x.Orgao
	}
	return nil
}

func (x *Classificacao) GetFuncao() *siop_proto.Classificador {
	if x != nil {
		return x.Funcao
	}
	return nil
}

func (x *Classificacao) GetSubFuncao() *siop_proto.Classificador {
	if x != nil {
		return x.SubFuncao
	}
	return nil
}

func (x *Classificacao) GetPrograma() *siop_proto.Classificador {
	if x != nil {
		return x.Programa
	}
	return nil
}

func (x *Classificacao) GetAcao() *siop_proto.Classificador {
	if x != nil {
		return x.Acao
	}
	return nil
}

func (x *Classificacao) GetLocalizador() *siop_proto.Classificador {
	if x != nil {
		return x.Localizador
	}
	return nil
}

func (x *Classificacao) GetClassificacaoCodificada() string {
	if x != nil {
		return x.ClassificacaoCodificada
	}
	return ""
}

type FiltroClassificacao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercicio                 int32            `protobuf:"varint,1,opt,name=exercicio,json=Exercicio,proto3" json:"exercicio,omitempty"`
	ClassificacoesCodificadas []string         `protobuf:"bytes,2,rep,name=classificacoes_codificadas,json=ClassificacoesCodificadas,proto3" json:"classificacoes_codificadas,omitempty"`
	Classificacoes            []*Classificacao `protobuf:"bytes,3,rep,name=classificacoes,json=Classificacoes,proto3" json:"classificacoes,omitempty"`
	ClassificacoesParciais    []*Classificacao `protobuf:"bytes,4,rep,name=classificacoes_parciais,json=ClassificacoesParciais,proto3" json:"classificacoes_parciais,omitempty"`
}

func (x *FiltroClassificacao) Reset() {
	*x = FiltroClassificacao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiltroClassificacao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiltroClassificacao) ProtoMessage() {}

func (x *FiltroClassificacao) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiltroClassificacao.ProtoReflect.Descriptor instead.
func (*FiltroClassificacao) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{7}
}

func (x *FiltroClassificacao) GetExercicio() int32 {
	if x != nil {
		return x.Exercicio
	}
	return 0
}

func (x *FiltroClassificacao) GetClassificacoesCodificadas() []string {
	if x != nil {
		return x.ClassificacoesCodificadas
	}
	return nil
}

func (x *FiltroClassificacao) GetClassificacoes() []*Classificacao {
	if x != nil {
		return x.Classificacoes
	}
	return nil
}

func (x *FiltroClassificacao) GetClassificacoesParciais() []*Classificacao {
	if x != nil {
		return x.ClassificacoesParciais
	}
	return nil
}

type Localizador struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int32          `protobuf:"varint,1,opt,name=id,json=ID,proto3" json:"id,omitempty"`
	EsferaId                int32          `protobuf:"varint,2,opt,name=esfera_id,json=EsferaID,proto3" json:"esfera_id,omitempty"`
	OrgaoId                 int32          `protobuf:"varint,3,opt,name=orgao_id,json=OrgaoID,proto3" json:"orgao_id,omitempty"`
	FuncaoId                int32          `protobuf:"varint,4,opt,name=funcao_id,json=FuncaoID,proto3" json:"funcao_id,omitempty"`
	SubfuncaoId             int32          `protobuf:"varint,5,opt,name=subfuncao_id,json=SubfuncaoID,proto3" json:"subfuncao_id,omitempty"`
	ProgramaId              int32          `protobuf:"varint,6,opt,name=programa_id,json=ProgramaID,proto3" json:"programa_id,omitempty"`
	AcaoId                  int32          `protobuf:"varint,7,opt,name=acao_id,json=AcaoID,proto3" json:"acao_id,omitempty"`
	ClassificacaoCodificada string         `protobuf:"bytes,8,opt,name=classificacao_codificada,json=ClassificacaoCodificada,proto3" json:"classificacao_codificada,omitempty"`
	Exercicio               int32          `protobuf:"varint,9,opt,name=exercicio,json=Exercicio,proto3" json:"exercicio,omitempty"`
	MomentoId               int32          `protobuf:"varint,10,opt,name=momento_id,json=MomentoId,proto3" json:"momento_id,omitempty"`
	Classificacao           *Classificacao `protobuf:"bytes,11,opt,name=classificacao,json=Classificacao,proto3" json:"classificacao,omitempty"`
	TipoInclusao            int32          `protobuf:"varint,12,opt,name=tipo_inclusao,json=TipoInclusao,proto3" json:"tipo_inclusao,omitempty"`
	MunicipioId             int32          `protobuf:"varint,13,opt,name=municipio_id,json=MunicipioId,proto3" json:"municipio_id,omitempty"`
	UfId                    int32          `protobuf:"varint,14,opt,name=uf_id,json=UfId,proto3" json:"uf_id,omitempty"`
	RegiaoId                int32          `protobuf:"varint,15,opt,name=regiao_id,json=RegiaoId,proto3" json:"regiao_id,omitempty"`
	Codigo                  string         `protobuf:"bytes,16,opt,name=codigo,json=Codigo,proto3" json:"codigo,omitempty"`
	Nacional                bool           `protobuf:"varint,17,opt,name=nacional,json=Nacional,proto3" json:"nacional,omitempty"`
	Descricao               string         `protobuf:"bytes,18,opt,name=descricao,json=Descricao,proto3" json:"descricao,omitempty"`
}

func (x *Localizador) Reset() {
	*x = Localizador{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Localizador) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Localizador) ProtoMessage() {}

func (x *Localizador) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Localizador.ProtoReflect.Descriptor instead.
func (*Localizador) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{8}
}

func (x *Localizador) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Localizador) GetEsferaId() int32 {
	if x != nil {
		return x.EsferaId
	}
	return 0
}

func (x *Localizador) GetOrgaoId() int32 {
	if x != nil {
		return x.OrgaoId
	}
	return 0
}

func (x *Localizador) GetFuncaoId() int32 {
	if x != nil {
		return x.FuncaoId
	}
	return 0
}

func (x *Localizador) GetSubfuncaoId() int32 {
	if x != nil {
		return x.SubfuncaoId
	}
	return 0
}

func (x *Localizador) GetProgramaId() int32 {
	if x != nil {
		return x.ProgramaId
	}
	return 0
}

func (x *Localizador) GetAcaoId() int32 {
	if x != nil {
		return x.AcaoId
	}
	return 0
}

func (x *Localizador) GetClassificacaoCodificada() string {
	if x != nil {
		return x.ClassificacaoCodificada
	}
	return ""
}

func (x *Localizador) GetExercicio() int32 {
	if x != nil {
		return x.Exercicio
	}
	return 0
}

func (x *Localizador) GetMomentoId() int32 {
	if x != nil {
		return x.MomentoId
	}
	return 0
}

func (x *Localizador) GetClassificacao() *Classificacao {
	if x != nil {
		return x.Classificacao
	}
	return nil
}

func (x *Localizador) GetTipoInclusao() int32 {
	if x != nil {
		return x.TipoInclusao
	}
	return 0
}

func (x *Localizador) GetMunicipioId() int32 {
	if x != nil {
		return x.MunicipioId
	}
	return 0
}

func (x *Localizador) GetUfId() int32 {
	if x != nil {
		return x.UfId
	}
	return 0
}

func (x *Localizador) GetRegiaoId() int32 {
	if x != nil {
		return x.RegiaoId
	}
	return 0
}

func (x *Localizador) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *Localizador) GetNacional() bool {
	if x != nil {
		return x.Nacional
	}
	return false
}

func (x *Localizador) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

type FiltroLocalizador struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids                       []int32          `protobuf:"varint,1,rep,packed,name=ids,json=Ids,proto3" json:"ids,omitempty"`
	ClassificacoesCodificadas []string         `protobuf:"bytes,2,rep,name=classificacoes_codificadas,json=ClassificacoesCodificadas,proto3" json:"classificacoes_codificadas,omitempty"`
	Exercicio                 int32            `protobuf:"varint,3,opt,name=exercicio,json=Exercicio,proto3" json:"exercicio,omitempty"`
	OrgaosIds                 []int32          `protobuf:"varint,4,rep,packed,name=orgaos_ids,json=OrgaosIds,proto3" json:"orgaos_ids,omitempty"`
	OrgaosIdsOuIdsPais        []int32          `protobuf:"varint,5,rep,packed,name=orgaos_ids_ou_ids_pais,json=OrgaosIdsOuIdsPais,proto3" json:"orgaos_ids_ou_ids_pais,omitempty"`
	Classificacoes            []*Classificacao `protobuf:"bytes,6,rep,name=classificacoes,json=Classificacoes,proto3" json:"classificacoes,omitempty"`
	ClassificacoesParciais    []*Classificacao `protobuf:"bytes,7,rep,name=classificacoes_parciais,json=ClassificacoesParciais,proto3" json:"classificacoes_parciais,omitempty"`
}

func (x *FiltroLocalizador) Reset() {
	*x = FiltroLocalizador{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiltroLocalizador) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiltroLocalizador) ProtoMessage() {}

func (x *FiltroLocalizador) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiltroLocalizador.ProtoReflect.Descriptor instead.
func (*FiltroLocalizador) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{9}
}

func (x *FiltroLocalizador) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *FiltroLocalizador) GetClassificacoesCodificadas() []string {
	if x != nil {
		return x.ClassificacoesCodificadas
	}
	return nil
}

func (x *FiltroLocalizador) GetExercicio() int32 {
	if x != nil {
		return x.Exercicio
	}
	return 0
}

func (x *FiltroLocalizador) GetOrgaosIds() []int32 {
	if x != nil {
		return x.OrgaosIds
	}
	return nil
}

func (x *FiltroLocalizador) GetOrgaosIdsOuIdsPais() []int32 {
	if x != nil {
		return x.OrgaosIdsOuIdsPais
	}
	return nil
}

func (x *FiltroLocalizador) GetClassificacoes() []*Classificacao {
	if x != nil {
		return x.Classificacoes
	}
	return nil
}

func (x *FiltroLocalizador) GetClassificacoesParciais() []*Classificacao {
	if x != nil {
		return x.ClassificacoesParciais
	}
	return nil
}

type FetchLocalizador struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassificacaoCodificada bool `protobuf:"varint,1,opt,name=classificacao_codificada,json=ClassificacaoCodificada,proto3" json:"classificacao_codificada,omitempty"`
	Classificacao           bool `protobuf:"varint,2,opt,name=classificacao,json=Classificacao,proto3" json:"classificacao,omitempty"`
}

func (x *FetchLocalizador) Reset() {
	*x = FetchLocalizador{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchLocalizador) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchLocalizador) ProtoMessage() {}

func (x *FetchLocalizador) ProtoReflect() protoreflect.Message {
	mi := &file_internal_gerados_qualitativo_servico_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchLocalizador.ProtoReflect.Descriptor instead.
func (*FetchLocalizador) Descriptor() ([]byte, []int) {
	return file_internal_gerados_qualitativo_servico_proto_rawDescGZIP(), []int{10}
}

func (x *FetchLocalizador) GetClassificacaoCodificada() bool {
	if x != nil {
		return x.ClassificacaoCodificada
	}
	return false
}

func (x *FetchLocalizador) GetClassificacao() bool {
	if x != nil {
		return x.Classificacao
	}
	return false
}

var File_internal_gerados_qualitativo_servico_proto protoreflect.FileDescriptor

var file_internal_gerados_qualitativo_servico_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x72, 0x61, 0x64,
	0x6f, 0x73, 0x2f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x1a, 0x10, 0x73, 0x69, 0x6f, 0x70, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x15, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x69,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63,
	0x69, 0x6f, 0x12, 0x3d, 0x0a, 0x1a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x63, 0x6f, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61,
	0x73, 0x22, 0x59, 0x0a, 0x13, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63,
	0x6f, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x22, 0x91, 0x01, 0x0a,
	0x14, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x72, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x76, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x72, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x72, 0x6f, 0x12, 0x33, 0x0a,
	0x05, 0x66, 0x65, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x05, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6e,
	0x22, 0x54, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x64, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x64, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x1a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x19, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73,
	0x43, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x73, 0x22, 0x56, 0x0a, 0x10, 0x44,
	0x65, 0x63, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x42, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x63, 0x61, 0x6f, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63,
	0x6f, 0x65, 0x73, 0x22, 0xbe, 0x03, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x61, 0x6f, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x73, 0x66, 0x65, 0x72, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72,
	0x52, 0x06, 0x45, 0x73, 0x66, 0x65, 0x72, 0x61, 0x12, 0x2f, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x61,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6f, 0x70, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64,
	0x6f, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x67, 0x61, 0x6f, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x75, 0x6e,
	0x63, 0x61, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6f, 0x70,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x46, 0x75, 0x6e, 0x63, 0x61, 0x6f, 0x12, 0x38, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x61, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x69, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x09, 0x53, 0x75, 0x62,
	0x46, 0x75, 0x6e, 0x63, 0x61, 0x6f, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6f, 0x70, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x64, 0x6f, 0x72, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x61, 0x12, 0x2d, 0x0a,
	0x04, 0x61, 0x63, 0x61, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69,
	0x6f, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x04, 0x41, 0x63, 0x61, 0x6f, 0x12, 0x3b, 0x0a, 0x0b,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x52, 0x0b, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x18, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x64, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x64, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x74, 0x72, 0x6f, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x69, 0x6f, 0x12, 0x3d, 0x0a, 0x1a, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x19,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x43, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x0e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x12, 0x53, 0x0a,
	0x17, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x5f,
	0x70, 0x61, 0x72, 0x63, 0x69, 0x61, 0x69, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x16, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x50, 0x61, 0x72, 0x63, 0x69, 0x61,
	0x69, 0x73, 0x22, 0xd5, 0x04, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64,
	0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x66, 0x65, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x45, 0x73, 0x66, 0x65, 0x72, 0x61, 0x49, 0x44, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x4f, 0x72, 0x67, 0x61, 0x6f, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75,
	0x6e, 0x63, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x46,
	0x75, 0x6e, 0x63, 0x61, 0x6f, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x66, 0x75,
	0x6e, 0x63, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53,
	0x75, 0x62, 0x66, 0x75, 0x6e, 0x63, 0x61, 0x6f, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x61, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x63, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x63,
	0x61, 0x6f, 0x49, 0x44, 0x12, 0x39, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x69, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x69, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0d,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76,
	0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52,
	0x0d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x69, 0x70, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x61, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x69, 0x70, 0x6f, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x61, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x75, 0x6e, 0x69, 0x63,
	0x69, 0x70, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x75, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x55, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x67, 0x69, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69,
	0x67, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x6f, 0x64, 0x69, 0x67, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x4e, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x22, 0xee, 0x02, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x74, 0x72, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x49,
	0x64, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x63, 0x6f, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x19, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x69, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x69, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x67, 0x61, 0x6f, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x09, 0x4f, 0x72, 0x67, 0x61, 0x6f, 0x73, 0x49, 0x64, 0x73, 0x12, 0x32,
	0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6f, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x6f, 0x75, 0x5f,
	0x69, 0x64, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12,
	0x4f, 0x72, 0x67, 0x61, 0x6f, 0x73, 0x49, 0x64, 0x73, 0x4f, 0x75, 0x49, 0x64, 0x73, 0x50, 0x61,
	0x69, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x63, 0x6f, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x17, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x63, 0x69, 0x61, 0x69,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x63, 0x61, 0x6f, 0x52, 0x16, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63,
	0x6f, 0x65, 0x73, 0x50, 0x61, 0x72, 0x63, 0x69, 0x61, 0x69, 0x73, 0x22, 0x73, 0x0a, 0x10, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x72, 0x12,
	0x39, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f,
	0x5f, 0x63, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x17, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f,
	0x43, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f,
	0x32, 0x8b, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x12, 0x22,
	0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x64, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x64, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x0b, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x72, 0x12, 0x1f, 0x2e, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x2e, 0x44, 0x65, 0x63, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x39,
	0x5a, 0x37, 0x67, 0x69, 0x74, 0x2e, 0x73, 0x6f, 0x66, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f,
	0x73, 0x69, 0x6f, 0x70, 0x2f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x6f,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x67, 0x65, 0x72, 0x61, 0x64, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_internal_gerados_qualitativo_servico_proto_rawDescOnce sync.Once
	file_internal_gerados_qualitativo_servico_proto_rawDescData = file_internal_gerados_qualitativo_servico_proto_rawDesc
)

func file_internal_gerados_qualitativo_servico_proto_rawDescGZIP() []byte {
	file_internal_gerados_qualitativo_servico_proto_rawDescOnce.Do(func() {
		file_internal_gerados_qualitativo_servico_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_gerados_qualitativo_servico_proto_rawDescData)
	})
	return file_internal_gerados_qualitativo_servico_proto_rawDescData
}

var file_internal_gerados_qualitativo_servico_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_internal_gerados_qualitativo_servico_proto_goTypes = []interface{}{
	(*ClassificacoesRequest)(nil),    // 0: qualitativo.ClassificacoesRequest
	(*ClassificacoesReply)(nil),      // 1: qualitativo.ClassificacoesReply
	(*LocalizadoresRequest)(nil),     // 2: qualitativo.LocalizadoresRequest
	(*LocalizadoresReply)(nil),       // 3: qualitativo.LocalizadoresReply
	(*DecodificarRequest)(nil),       // 4: qualitativo.DecodificarRequest
	(*DecodificarReply)(nil),         // 5: qualitativo.DecodificarReply
	(*Classificacao)(nil),            // 6: qualitativo.Classificacao
	(*FiltroClassificacao)(nil),      // 7: qualitativo.FiltroClassificacao
	(*Localizador)(nil),              // 8: qualitativo.Localizador
	(*FiltroLocalizador)(nil),        // 9: qualitativo.FiltroLocalizador
	(*FetchLocalizador)(nil),         // 10: qualitativo.FetchLocalizador
	(*siop_proto.Classificador)(nil), // 11: siop_proto.Classificador
}
var file_internal_gerados_qualitativo_servico_proto_depIdxs = []int32{
	6,  // 0: qualitativo.ClassificacoesReply.classificacoes:type_name -> qualitativo.Classificacao
	9,  // 1: qualitativo.LocalizadoresRequest.filtro:type_name -> qualitativo.FiltroLocalizador
	10, // 2: qualitativo.LocalizadoresRequest.fetch:type_name -> qualitativo.FetchLocalizador
	8,  // 3: qualitativo.LocalizadoresReply.localizadores:type_name -> qualitativo.Localizador
	6,  // 4: qualitativo.DecodificarReply.classificacoes:type_name -> qualitativo.Classificacao
	11, // 5: qualitativo.Classificacao.esfera:type_name -> siop_proto.Classificador
	11, // 6: qualitativo.Classificacao.orgao:type_name -> siop_proto.Classificador
	11, // 7: qualitativo.Classificacao.funcao:type_name -> siop_proto.Classificador
	11, // 8: qualitativo.Classificacao.sub_funcao:type_name -> siop_proto.Classificador
	11, // 9: qualitativo.Classificacao.programa:type_name -> siop_proto.Classificador
	11, // 10: qualitativo.Classificacao.acao:type_name -> siop_proto.Classificador
	11, // 11: qualitativo.Classificacao.localizador:type_name -> siop_proto.Classificador
	6,  // 12: qualitativo.FiltroClassificacao.classificacoes:type_name -> qualitativo.Classificacao
	6,  // 13: qualitativo.FiltroClassificacao.classificacoes_parciais:type_name -> qualitativo.Classificacao
	6,  // 14: qualitativo.Localizador.classificacao:type_name -> qualitativo.Classificacao
	6,  // 15: qualitativo.FiltroLocalizador.classificacoes:type_name -> qualitativo.Classificacao
	6,  // 16: qualitativo.FiltroLocalizador.classificacoes_parciais:type_name -> qualitativo.Classificacao
	0,  // 17: qualitativo.Service.Classificacoes:input_type -> qualitativo.ClassificacoesRequest
	2,  // 18: qualitativo.Service.Localizadores:input_type -> qualitativo.LocalizadoresRequest
	4,  // 19: qualitativo.Service.Decodificar:input_type -> qualitativo.DecodificarRequest
	1,  // 20: qualitativo.Service.Classificacoes:output_type -> qualitativo.ClassificacoesReply
	3,  // 21: qualitativo.Service.Localizadores:output_type -> qualitativo.LocalizadoresReply
	5,  // 22: qualitativo.Service.Decodificar:output_type -> qualitativo.DecodificarReply
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_internal_gerados_qualitativo_servico_proto_init() }
func file_internal_gerados_qualitativo_servico_proto_init() {
	if File_internal_gerados_qualitativo_servico_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_gerados_qualitativo_servico_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassificacoesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassificacoesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizadoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizadoresReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodificarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodificarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Classificacao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiltroClassificacao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Localizador); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiltroLocalizador); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_gerados_qualitativo_servico_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchLocalizador); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_gerados_qualitativo_servico_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_gerados_qualitativo_servico_proto_goTypes,
		DependencyIndexes: file_internal_gerados_qualitativo_servico_proto_depIdxs,
		MessageInfos:      file_internal_gerados_qualitativo_servico_proto_msgTypes,
	}.Build()
	File_internal_gerados_qualitativo_servico_proto = out.File
	file_internal_gerados_qualitativo_servico_proto_rawDesc = nil
	file_internal_gerados_qualitativo_servico_proto_goTypes = nil
	file_internal_gerados_qualitativo_servico_proto_depIdxs = nil
}
